@model List<EventPlanner.Web.Models.BookingVm>

@{
    ViewData["Title"] = "Bookings";

    var eventItems = ViewBag.EventList as List<SelectListItem> ?? new();

    var qId      = Context.Request.Query["id"].FirstOrDefault();
    var qUserId  = Context.Request.Query["userId"].FirstOrDefault();
    var qEventId = Context.Request.Query["eventId"].FirstOrDefault();
    var qTicket  = Context.Request.Query["ticketId"].FirstOrDefault();
    var qActive  = Context.Request.Query["active"].FirstOrDefault();

    bool hasQuery =
        !string.IsNullOrWhiteSpace(qId) ||
        !string.IsNullOrWhiteSpace(qUserId) ||
        !string.IsNullOrWhiteSpace(qEventId) ||
        !string.IsNullOrWhiteSpace(qTicket) ||
        string.Equals(qActive, "true", StringComparison.OrdinalIgnoreCase);
}

<h2 class="mb-3">Bookings</h2>

<div class="d-flex justify-content-between align-items-center mb-3">
    <div class="text-muted small">
        @if (!string.IsNullOrWhiteSpace(qEventId)) { <text>Filter: Event = @qEventId</text> }
        else if (!string.IsNullOrWhiteSpace(qUserId)) { <text>Filter: UserId = @qUserId</text> }
        else if (!string.IsNullOrWhiteSpace(qId)) { <text>Filter: BookingId = @qId</text> }
        else if (!string.IsNullOrWhiteSpace(qTicket)) { <text>Filter: UserId = @qUserId, TicketId = @qTicket</text> }
        else if (string.Equals(qActive, "true", StringComparison.OrdinalIgnoreCase)) { <text>Filter: Active only</text> }
    </div>
    <div>
        <a asp-action="Create" class="btn btn-success">+ Add Booking</a>
    </div>
</div>

<div class="row g-3 mb-4">
    <!-- Search by Booking Id -->
    <div class="col-12 col-lg-6">
        <form asp-action="Index" method="get" class="row g-2 align-items-center">
            <div class="col-8">
                <input name="id" type="number" min="1" class="form-control" placeholder="Booking Id" value="@qId" />
            </div>
            <div class="col-4 d-grid">
                <button class="btn btn-primary">Search by Id</button>
            </div>
        </form>
    </div>

    <!-- Search by UserId -->
    <div class="col-12 col-lg-6">
        <form asp-action="Index" method="get" class="row g-2 align-items-center">
            <div class="col-8">
                <input name="userId" type="number" min="1" class="form-control" placeholder="User Id" value="@qUserId" />
            </div>
            <div class="col-4 d-grid">
                <button class="btn btn-secondary">Search by User</button>
            </div>
        </form>
    </div>

    <!-- Search by Event (dropdown from ViewBag.EventList) -->
    <div class="col-12 col-lg-6">
        <form asp-action="Index" method="get" class="row g-2 align-items-center">
            <div class="col-8">
                <select name="eventId" class="form-select">
                    <option value="">-- Select event --</option>
                    @foreach (var it in eventItems)
                    {
                        <option value="@it.Value" selected="@(it.Value == qEventId ? "selected" : null)">@it.Text</option>
                    }
                </select>
            </div>
            <div class="col-4 d-grid">
                <button class="btn btn-secondary">Search by Event</button>
            </div>
        </form>
    </div>

    <!-- Search by UserId + TicketId -->
    <div class="col-12 col-lg-6">
        <form asp-action="Index" method="get" class="row g-2 align-items-center">
            <div class="col-5">
                <input name="userId" type="number" min="1" class="form-control" placeholder="User Id" value="@qUserId" />
            </div>
            <div class="col-5">
                <input name="ticketId" type="number" min="1" class="form-control" placeholder="Ticket Id" value="@qTicket" />
            </div>
            <div class="col-2 d-grid">
                <button class="btn btn-secondary">Search U+T</button>
            </div>
        </form>
    </div>

    <!-- Show all active -->
    <div class="col-12">
        <form asp-action="Index" method="get" class="d-inline">
            <input type="hidden" name="active" value="true" />
            <button class="btn btn-outline-primary">Show active</button>
        </form>
        @if (hasQuery)
        {
            <a asp-action="Index" class="btn btn-link ms-2">Clear</a>
        }
    </div>
</div>

@if (Model != null && Model.Any())
{
    <table class="table table-striped table-bordered align-middle">
        <thead class="table-light">
            <tr>
                <th>Id</th>
                <th>UserId</th>
                <th>TicketId</th>
                <th>Status</th>
                <th style="width:220px;">Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var b in Model)
        {
            <tr>
                <td>@b.Id</td>
                <td>@b.UserId</td>
                <td>@b.TicketId</td>
                <td>
                    @if (string.Equals(b.Status, "Active", StringComparison.OrdinalIgnoreCase))
                    {
                        <span class="badge bg-success">Active</span>
                    }
                    else if (string.Equals(b.Status, "Cancelled", StringComparison.OrdinalIgnoreCase))
                    {
                        <span class="badge bg-secondary">Cancelled</span>
                    }
                    else
                    {
                        <span class="badge bg-light text-dark">@b.Status</span>
                    }
                </td>
                <td>
                    <!-- Cancel (soft) -->
                    <form asp-action="Cancel" asp-route-id="@b.Id" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button class="btn btn-sm btn-warning"
                                title="Cancel booking"
                                onclick="return confirm('Cancel this booking?');">
                            Cancel
                        </button>
                    </form>

                    <!-- Delete (hard) -->
                    <form asp-action="Delete" asp-route-id="@b.Id" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button class="btn btn-sm btn-danger ms-1"
                                title="Delete booking permanently"
                                onclick="return confirm('Delete this booking permanently?');">
                            Delete
                        </button>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else if (hasQuery)
{
    <div class="alert alert-warning">No bookings found.</div>
}